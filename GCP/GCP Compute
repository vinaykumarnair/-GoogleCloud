   of 8   
MODULE 4 | COMPUTEGCP - MOD. 4 - COMPUTE CLOUD DEPLOYMENT PROJECT (HANDS-ON)SOLUTION:LIFT & SHIFT + APP MODERNIZATION:CONVERTING A LEGACY APPLICATION TO RUN IN CONTAINERS IN THEGOOGLE KUBERNETES ENGINE (GKE) USING ANTHOS
Before starting...Step 1)Creatingaproject:Name:tcb-gcp-anthosStep2)Checkingthatbillingisenabledforthenewprojectcreated.LIFT & SHIFT + APP MODERNIZATION:CONVERTING A LEGACY APPLICATION TORUN IN CONTAINERS IN THE GOOGLEKUBERNETES ENGINE (GKE) USINGANTHOSEnabling 03 APIsCloud Resource Manager APICompute Engine APIKubernetes Engine APIAPI & Services |Dashboard|Enable API e Services.EnablethefollowingAPIs:Step 1)OpeningtheCloudShellandsettingasaprojectdefault:tcb-gcp-anthos.gcloud config set project tcb-gcp-anthosNowthevariable$DEVSHELL_PROJECT_IDhasthevaluetcb-gcp-anthosprojectID.Step 2)Settingupthecomputezoneus-west1-aasdefault.gcloud config set compute/zone us-west1-aLift & Shift steps
Step 3) Addingfirewallrulestoallowtrafficonhttpandssh ports.gcloud compute firewall-rules create allow-ssh --network default \--allow tcp:22 --source-ranges 0.0.0.0/0gcloud compute firewall-rules create allow-http --network default \--allow tcp:80 --source-ranges 0.0.0.0/0Step 4) RunthecommandbelowtocreatetheVMtoperformtheLift&Shiftsteps.P.S.: Before run, copy the command to a notepad and remove all "\". After that, run the command.gcloud compute instances create app-01 --project=$DEVSHELL_PROJECT_ID \--zone=us-west1-a --machine-type=n1-standard-1 --subnet=default \--scopes="cloud-platform" --tags=http-server,https-server \--image=ubuntu-minimal-1604-xenial-v20210119a --image-project=ubuntu-os-cloud \--boot-disk-size=10GB --boot-disk-type=pd-standard --boot-disk-device-name=app-01Step 5)Generatingkeypairandsettingupthepermissions.ssh-keygen -t rsa -f ~/.ssh/app-key -C [USERNAME]chmod 400 ~/.ssh/app-keyCheckingthechangespermission:ls -l | grep app-keyStep 6)ImportingthekeypairgeneratedtoGoogleCloud:gcloud compute config-ssh --ssh-key-file=~/.ssh/app-key
Step 1)Usinggcloudcommand:P.S.: Before run, copy the command to a notepad and remove all "\". After that, run the command.gcloud container clusters create app-01 \--project=$DEVSHELL_PROJECT_ID --zone=us-west1-a --machine-type n1-standard-4 \--cluster-version=1.19.12 --release-channel=stable --image-type ubuntu \--num-nodes 1 --enable-stackdriver-kubernetes \--subnetwork "projects/$DEVSHELL_PROJECT_ID/regions/us-west1/subnetworks/default"Modernization steps - Part 2Step 7)ConnectingtothenewVMcreatedviaSSHandrunningthefollowingcommands:sudo apt-get update && sudo apt-get install apache2 unzip -ycd /var/www/htmlsudo mv index.html index.html.bkpsudo curl -O https://storage.googleapis.com/bootcamp-gcp-en/hands-on-compute-website-files-en.zipsudo unzip hands-on-compute-website-files-en.zipsudo chmod 644 *Step 8)CopytheExternalIPoftheComputeEnginecreatedandaccessitviabrowsertovalidateiftheLift & Shiftprocesswascompletedsuccessfully.Step 9)Aftersuccessfullyaccessingthewebapplication,wecanstopVMinstances:app-01.Creating a GKE ClusterInstalling the Migrate for AnthosStep 1)Creatingaserviceaccounttcb-m4a-install.P.S: Before run, copy the command to a notepad and remove the "\". After that, run the command.gcloud iam service-accounts create tcb-m4a-install \--project=$DEVSHELL_PROJECT_IDStep 2)Assigningarolestorage.admintoaserviceaccounttcb-m4a-install.P.S.: Before run, copy the command to a notepad and remove all "\". After that, run the command.gcloud projects add-iam-policy-binding $DEVSHELL_PROJECT_ID \--member="serviceAccount:tcb-m4a-install@$DEVSHELL_PROJECT_ID.iam.gserviceaccount.com" \--role="roles/storage.admin"
Steps for VM migrationStep 1)Creatingaserviceaccounttcb-m4a-ce-src:P.S.: Before run, copy the command to a notepad and remove the "\". After that, run the command.gcloud iam service-accounts create tcb-m4a-ce-src \--project=$DEVSHELL_PROJECT_IDStep 2)Assigningtherolecompute.viewertoaserviceaccounttcb-m4a-ce-src:P.S.: Before run, copy the command to a notepad and remove all "\". After that, run the command.gcloud projects add-iam-policy-binding $DEVSHELL_PROJECT_ID \--member="serviceAccount:tcb-m4a-ce-src@$DEVSHELL_PROJECT_ID.iam.gserviceaccount.com" \--role="roles/compute.viewer"Step 3)Creatinganddownloadingtheserviceaccounttcb-m4a-install key:P.S.: Before run, copy the command to a notepad and remove all "\". After that, run the command.gcloud iam service-accounts keys create tcb-m4a-install.json \--iam-account=tcb-m4a-install@$DEVSHELL_PROJECT_ID.iam.gserviceaccount.com \--project=$DEVSHELL_PROJECT_IDStep 4)ConnectingtotheKubernetescluster:P.S.: Before run, copy the command to a notepad and remove all "\". After that, run the command.gcloud container clusters get-credentials app-01 \--zone us-west1-a --project $DEVSHELL_PROJECT_IDStep 5)SettinguptheMigrate for AnthoscomponentsintheGKE cluster app-01:migctl setup install --json-key=tcb-m4a-install.jsonStep 6)RunningthecommandbelowtovalidatetheMigrate for Anthosinstallation:migctl doctorAfter2-3minutesyouwillseethesuccessstatusindicatingthattheDeploymentstephasbeencompleted:[âœ“] Deployment
Step 3)Assigningtheroledecompute.storageAdmintoaserviceaccounttcb-m4a-ce-src:P.S.: Before run, copy the command to a notepad and remove all "\". After that, run the command.gcloud projects add-iam-policy-binding $DEVSHELL_PROJECT_ID \--member="serviceAccount:tcb-m4a-ce-src@$DEVSHELL_PROJECT_ID.iam.gserviceaccount.com" \--role="roles/compute.storageAdmin"Step 4)Creatinganddownloadingtheserviceaccounttcb-m4a-ce-src key:P.S.: Before run, copy the command to a notepad and remove all "\". After that, run the command.gcloud iam service-accounts keys create tcb-m4a-ce-src.json \--iam-account=tcb-m4a-ce-src@$DEVSHELL_PROJECT_ID.iam.gserviceaccount.com \--project=$DEVSHELL_PROJECT_IDStep 5)Definingthe'CE'(ComputeEngine)asasource:P.S.: Before run, copy the command to a notepad and remove the "\". After that, run the command.migctl source create ce app-01-source --project $DEVSHELL_PROJECT_ID \--json-key=tcb-m4a-ce-src.jsonCreating/Downloading and Checking theMigration planSourcename:app-01-sourceStep 1)Creatingthemigrationplan:P.S.: Before run, copy the command to a notepad and remove all "\". After that, run the command.migctl migration create my-migration --source app-01-source\--vm-id app-01 --intent ImageCheckingthemigrationstatus:migctl migration status my-migrationStep 2)(Opcional)Downloadingthemigrationplan:migctl migration get my-migrationStep 3)(Optional)UsingtheText Editortoopenthefilemy-migration.yaml.Step 4)(Optional)Ifyouchangeanything,runthecommandbelowtoupdatethemigrationplan:migctl migration update my-migration --file my-migration.yaml
Step 5)MigratingtheVMusingamigrationplan:migctl migration generate-artifacts my-migrationCheckingthemigrationstatus(Ittakesbetween5-10minutes).migctl migration status my-migrationSteps to deploy the migrated workloadStep 1)Downloadingtheartifacts:migctl migration get-artifacts my-migrationStep 2)FromTextEditor,openthefiledeployment_spec.yaml.Step 3)Intheendofthefile,afterthe'---'addthelineshighlightedingreen:apiVersion: v1kind: Servicemetadata:creationTimestamp: nullname: app-01spec:clusterIP: Noneselector:app: app-01type: ClusterIPstatus:loadBalancer: {}---apiVersion: v1kind: Servicemetadata:name: talent-management-portalspec:selector:app: app-01ports:- protocol: TCPport: 80targetPort: 80type: LoadBalancer
Step 4)Applyingthechangesanddeployingtheworkload:kubectl apply -f deployment_spec.yamlStep 5)CheckingtheexternalIPexternal:kubectl get service talent-management-portalWhenthewebserverisready,youwillseetheexternalIPaddresstoaccesstheTalentManagementPortal.So,youmustcopytheIPandpasteitinthebrowsertotestit!Ifit'sOk,youwillseethisscreenofyoumodernapplicationrunningintheGKE.https://cloud.google.com/migrate/anthoshttps://cloud.google.com/migrate/anthos/docs/anthos-migrate-benefitshttps://cloud.google.com/migrate/anthos/docs/architecturehttps://cloud.google.com/migrate/anthos/docs/migration-journeyhttps://cloud.google.com/migrate/anthos/docs/dev-env-overviewReferences:Congratulations!!!Yousuccessfullycompletedthemission!!ðŸ˜Ž
