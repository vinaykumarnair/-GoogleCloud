     of 7   
MODULE 3 | VPCGCP - MODULE 3 - VPC CLOUD DEPLOYMENT PROJECT (HANDS-ON)SOLUTION:DEPLOYMENT OF A PRIVATE COMMUNICATION INA MULTICLOUD ENVIRONMENT(AWS AND GCP)100% AUTOMATED USING TERRAFORM
PrerequisitesCreateanAWSaccountStep1)Creating a GCP ProjectName:tcb-gcp-awsNote:Write down the Project ID located in the Project information panelStep2)Checking if the Billing is enabled.Step3)Enabling the Compute Engine APILinktoenable,clickhere.-SelecttheprojectcreatedintheStep1-Proceedthenextstepsaccordingtothevideo.Step4)Starting the Cloud ShellStep5)Downloading Project filescurl -O https://storage.googleapis.com/bootcamp-gcp-public/hands-on-tcb-bmc-gcp.zipStep6)Extracting the .zip fileunzip hands-on-tcb-bmc-gcp.zipStep7)Acessing the folder "hands-on-tcb-bmc-gcp"cd hands-on-tcb-bmc-gcpDEPLOYMENT OF A PRIVATE COMMUNICATION INA MULTICLOUD ENVIRONMENT(AWS and GCP)100% AUTOMATED USING TERRAFORMKey StepsStep8)Allowing 'execute' permission for all files .shchmod +x *.sh
Firstofall,selecttheregion:Oregon: us-west-2Step1)AWS console|IAM|Users|Add user | Programmatic accessAttachexistingpoliciesdirectly:AdministratorAccess Next | Next|Create UserDownloadthe.csv (credentials file)Getting the Terraform readyMakesureyou'reinthefolder'hands-on-tcb-bmc-gcp'Andrunthecommand:./get_terraform.shCreating credentials in the GCPStep1)Creating and downloading the Service Account Key (JSON format)DefaultServiceaccount[Name:Compute Engine default service account]SelecionarJSONeclicaremCreate.Step2)Uploading the file (key) .json to the Cloud Shell.Step3)Running the command:./gcp_set_credentials.sh ~/file.jsonCreating credentials in the AWS (Oregon - us-west-2)Step2)Renaming the .csv file to accessKeys.csvStep3)Uploading the file (key) .csv to the Cloud Shell.Step4)Running the command:./aws_set_credentials.sh ~/accessKeys.csvSetting up the GCP ProjectStep1)From Cloud Shell, run the command:gcloud config set project [YOUR-PROJECT-ID]Step2)Run the command:./gcp_set_project.shStep3)Check if the project-id was inserted into the file terraform.tfvarscat /home/[YOUR-USERNAME]/hands-on-tcb-bmc-gcp/terraform/terraform.tfvars
Step1)Run the command 'whoami' to get your username.Step2)Run the command below, replacing 'YOUR-USERNAME'ssh-keygen -t rsa -f ~/.ssh/vm-ssh-key -C [YOUR-USERNAME]Step3)Run the command below to set up a permission to the private key:chmod 400 ~/.ssh/vm-ssh-keyGenerating a Key PairsFromCloud Shell,runthefollowingcommand:gcloud compute config-ssh --ssh-key-file=~/.ssh/vm-ssh-keyGotometadatapage,andcheckifyourkeywasimported,clickonhere.ClickonthetabSSH Keys,andyou'llseeyoursshkey!üòéImporting the public key to GCPStep1)Proceed with the download of the 'Public Key' generated in the Cloud Shell.FilePath:/home/[YOUR-USERNAME]/.ssh/vm-ssh-key.pubStep2)AWS console|EC2|Network & Security|Key PairsPayAttention->Youmustusethename:vm-ssh-keyBrowse,|Selectthefilevm-ssh-key-pub |ClickonImport key pair.Importing the public key toAWS
Step3)Run the command below to initialize the Terraform:terraform initStep4)Run this command to validate the Terraform configuration:terraform validateStep5)Run the command below to check the Terraform planning deployment:terraform planStep6)Let's start de Terraform deployment:terraform apply|TypeyestoconfirmStep7)(Optional)Command to view the variables shown at the end of deployment.terraform outputStep8)Now,  following  the  video  instructions  to  test  the  connectivity  between  theinstances created both GCP and AWS.Step9)After  successful  the  test  and getting  the  evidence,  it's  time  to  'destroy'  theresources, only running this command below:terraform destroyNotimetosaygood-bye,justtype'Yes' toconfirm!üòÅSeeyou...Terraform's Time!Step1)From Cloud Shell, make sure you're in the folder 'hands-on-tcb-bmc-gcp'Step2)Go to the Terraform's folder:cd terraform
main.tf-Thisfilecontainstheprovidersinformation.gcp_variables.tf, aws_variables.tf-Filesusedtodeclaretheprovidersvariables.gcp_compute.tf, aws_compute.tf-Informationaboutthedeploymentforcomputeresources.gcp_networking.tf, aws_networking.tf-Networkresourcesinformation.gcp_security.tf,aws_security.tf - Securityinformationdeployment.gcp_outputs.tf, aws_outputs.tf -Variablestobeshownattheendofthedeployment.Terraform files
AWSaws_instanceaws_amiaws_eipaws_vpcaws_subnetaws_internet_gatewayaws_vpn_gatewayaws_customer_gatewayaws_default_route_tableaws_vpn_connectionaws_security_groupGoogleCloudgoogle_compute_zonesgoogle_compute_instancegoogle_compute_networkgoogle_compute_subnetworkgoogle_compute_addressgoogle_compute_vpn_gatewaygoogle_compute_forwarding_rulegoogle_compute_vpn_tunnelgoogle_compute_routergoogle_compute_router_peergoogle_compute_router_interfacegoogle_compute_firewallhttps://cloud.google.com/community/tutorials/managing-gcp-projects-with-terraformhttps://cloud.google.com/network-connectivity/docs/vpn/concepts/overviewhttps://cloud.google.com/network-connectivity/docs/vpn/how-to/creating-ha-vpnhttps://cloud.google.com/network-connectivity/docs/vpn/concepts/advancedhttps://cloud.google.com/files/CloudVPNGuide-UsingCloudVPNwithAmazonWebServices.pdfReferences:Terraformdocs:
